/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

goog.provide('proto.qrl.GetObjectResp');

goog.require('jspb.BinaryReader');
goog.require('jspb.BinaryWriter');
goog.require('jspb.Message');
goog.require('proto.qrl.AddressState');
goog.require('proto.qrl.Block');
goog.require('proto.qrl.TransactionExtended');


/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.qrl.GetObjectResp = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.qrl.GetObjectResp.oneofGroups_);
};
goog.inherits(proto.qrl.GetObjectResp, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.qrl.GetObjectResp.displayName = 'proto.qrl.GetObjectResp';
}
/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.qrl.GetObjectResp.oneofGroups_ = [[2,3,4]];

/**
 * @enum {number}
 */
proto.qrl.GetObjectResp.ResultCase = {
  RESULT_NOT_SET: 0,
  ADDRESS_STATE: 2,
  TRANSACTION: 3,
  BLOCK: 4
};

/**
 * @return {proto.qrl.GetObjectResp.ResultCase}
 */
proto.qrl.GetObjectResp.prototype.getResultCase = function() {
  return /** @type {proto.qrl.GetObjectResp.ResultCase} */(jspb.Message.computeOneofCase(this, proto.qrl.GetObjectResp.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.qrl.GetObjectResp.prototype.toObject = function(opt_includeInstance) {
  return proto.qrl.GetObjectResp.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.qrl.GetObjectResp} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.qrl.GetObjectResp.toObject = function(includeInstance, msg) {
  var f, obj = {
    found: jspb.Message.getFieldWithDefault(msg, 1, false),
    addressState: (f = msg.getAddressState()) && proto.qrl.AddressState.toObject(includeInstance, f),
    transaction: (f = msg.getTransaction()) && proto.qrl.TransactionExtended.toObject(includeInstance, f),
    block: (f = msg.getBlock()) && proto.qrl.Block.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.qrl.GetObjectResp}
 */
proto.qrl.GetObjectResp.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.qrl.GetObjectResp;
  return proto.qrl.GetObjectResp.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.qrl.GetObjectResp} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.qrl.GetObjectResp}
 */
proto.qrl.GetObjectResp.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setFound(value);
      break;
    case 2:
      var value = new proto.qrl.AddressState;
      reader.readMessage(value,proto.qrl.AddressState.deserializeBinaryFromReader);
      msg.setAddressState(value);
      break;
    case 3:
      var value = new proto.qrl.TransactionExtended;
      reader.readMessage(value,proto.qrl.TransactionExtended.deserializeBinaryFromReader);
      msg.setTransaction(value);
      break;
    case 4:
      var value = new proto.qrl.Block;
      reader.readMessage(value,proto.qrl.Block.deserializeBinaryFromReader);
      msg.setBlock(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.qrl.GetObjectResp.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.qrl.GetObjectResp.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.qrl.GetObjectResp} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.qrl.GetObjectResp.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFound();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getAddressState();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.qrl.AddressState.serializeBinaryToWriter
    );
  }
  f = message.getTransaction();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.qrl.TransactionExtended.serializeBinaryToWriter
    );
  }
  f = message.getBlock();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.qrl.Block.serializeBinaryToWriter
    );
  }
};


/**
 * optional bool found = 1;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.qrl.GetObjectResp.prototype.getFound = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 1, false));
};


/** @param {boolean} value */
proto.qrl.GetObjectResp.prototype.setFound = function(value) {
  jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional AddressState address_state = 2;
 * @return {?proto.qrl.AddressState}
 */
proto.qrl.GetObjectResp.prototype.getAddressState = function() {
  return /** @type{?proto.qrl.AddressState} */ (
    jspb.Message.getWrapperField(this, proto.qrl.AddressState, 2));
};


/** @param {?proto.qrl.AddressState|undefined} value */
proto.qrl.GetObjectResp.prototype.setAddressState = function(value) {
  jspb.Message.setOneofWrapperField(this, 2, proto.qrl.GetObjectResp.oneofGroups_[0], value);
};


proto.qrl.GetObjectResp.prototype.clearAddressState = function() {
  this.setAddressState(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.qrl.GetObjectResp.prototype.hasAddressState = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional TransactionExtended transaction = 3;
 * @return {?proto.qrl.TransactionExtended}
 */
proto.qrl.GetObjectResp.prototype.getTransaction = function() {
  return /** @type{?proto.qrl.TransactionExtended} */ (
    jspb.Message.getWrapperField(this, proto.qrl.TransactionExtended, 3));
};


/** @param {?proto.qrl.TransactionExtended|undefined} value */
proto.qrl.GetObjectResp.prototype.setTransaction = function(value) {
  jspb.Message.setOneofWrapperField(this, 3, proto.qrl.GetObjectResp.oneofGroups_[0], value);
};


proto.qrl.GetObjectResp.prototype.clearTransaction = function() {
  this.setTransaction(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.qrl.GetObjectResp.prototype.hasTransaction = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional Block block = 4;
 * @return {?proto.qrl.Block}
 */
proto.qrl.GetObjectResp.prototype.getBlock = function() {
  return /** @type{?proto.qrl.Block} */ (
    jspb.Message.getWrapperField(this, proto.qrl.Block, 4));
};


/** @param {?proto.qrl.Block|undefined} value */
proto.qrl.GetObjectResp.prototype.setBlock = function(value) {
  jspb.Message.setOneofWrapperField(this, 4, proto.qrl.GetObjectResp.oneofGroups_[0], value);
};


proto.qrl.GetObjectResp.prototype.clearBlock = function() {
  this.setBlock(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.qrl.GetObjectResp.prototype.hasBlock = function() {
  return jspb.Message.getField(this, 4) != null;
};


